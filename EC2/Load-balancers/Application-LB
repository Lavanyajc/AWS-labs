
#AWS ALB with Two EC2 Instances

This  demonstrates how to set up an **Application Load Balancer (ALB)** to route traffic to two EC2 instances running Apache web servers.



## üßæ Prerequisites

- AWS Account
- Basic knowledge of EC2, Security Groups, and Load Balancers
- IAM role with EC2 and ALB permissions

---

## üõ†Ô∏è Steps

### 1. Create a Key Pair (if not existing)

This is required to SSH into your EC2 instances if needed.

---

### 2. Create Two EC2 Instances

Launch two EC2 instances using Amazon Linux 2 AMI. During instance creation:

- Attach this **user data script** to each instance:

```bash
#!/bin/bash
# Use this for your user data (script from top to bottom)
# Install Apache Web Server
yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "<h1>Hello World from $(hostname -f)</h1>" > /var/www/html/index.html
```

- Make sure to place both instances in the **same VPC** and **Availability Zones** (for ALB routing).
- Ensure **port 80** is open in the EC2 security group.

---

### 3. Verify Web Server

Once EC2s are running:

- Copy their public IPs and open in a browser:
  - `http://<Instance1-Public-IP>`
  - `http://<Instance2-Public-IP>`

You should see:
> Hello World from ip-xxx-xxx-xxx-xxx

---

### 4. Create a Target Group

- Go to EC2 > Target Groups
- Create a new target group of type `Instance`
- Protocol: HTTP, Port: 80
- Register both EC2 instances

---

### 5. Create an Application Load Balancer (ALB)

- Go to EC2 > Load Balancers > Create Load Balancer
- Choose **Application Load Balancer**
- Configure:
  - Scheme: Internet-facing
  - Listeners: HTTP (port 80)
  - Availability Zones: Select where your EC2s are deployed
- Attach the target group you created earlier

---

### 6. Update Security Groups

- Ensure the ALB‚Äôs security group allows **inbound HTTP (port 80)**
- EC2 security groups should allow **inbound traffic from the ALB‚Äôs SG**

---

### 7. Test the ALB

- Copy the **DNS name** of the ALB
- Open it in your browser:  
  `http://<ALB-DNS-Name>`

You should see alternating responses from both instances:
> Hello World from ip-xxx-xxx-xxx-xxx

---

## üìÇ Files

- `user-data.sh`: Startup script to install and configure Apache on EC2
```

---

### `user-data.sh`

```bash
#!/bin/bash
# Use this for your user data (script from top to bottom)
# Install Apache Web Server
yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "<h1>Hello World from $(hostname -f)</h1>" > /var/www/html/index.html
```

